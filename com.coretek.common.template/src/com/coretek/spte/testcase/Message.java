/************************************************************************
 *				北京科银京成技术有限公司 版权所有
 *    Copyright (C) 2000-2011 CoreTek Systems Inc. All Rights Reserved.
 ***********************************************************************/

package com.coretek.spte.testcase;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import com.coretek.common.template.build.codeTemplate.Entity;
import com.coretek.common.template.build.codeTemplate.EntityRules;
import com.coretek.common.template.build.codeTemplate.FieldRules;

/**
 * 此类对应于xml上的 "message" 节点. 如果您不是专业人士，请不要修改此文件.
 * 
 * @author GENERATED BY SPTE_CODE_ROBOT
 */
@EntityRules(xpath = "message", xmlName = "message", displayField = "", dragable = false, superClazz = "com.coretek.common.template.XMLBean")
public class Message extends com.coretek.common.template.XMLBean implements Serializable, Cloneable
{

	private static final long	serialVersionUID	= -7390714477461425890L;

	// 此属性对应于"periodCount"
	@FieldRules(xmlName = "periodCount", display = false, type = "Integer", node = false, editable = false, textNode = false)
	private Integer				periodCount;
	// 此属性对应于"parallel"
	@FieldRules(xmlName = "parallel", display = false, type = "Boolean", node = false, editable = false, textNode = false)
	private Boolean				parallel;
	// 此属性对应于"direction"
	@FieldRules(xmlName = "direction", display = false, type = "String", node = false, editable = false, textNode = false)
	private String				direction;
	// 此属性对应于"width"
	@FieldRules(xmlName = "width", display = false, type = "Integer", node = false, editable = false, textNode = false)
	private Integer				width;
	// 此属性对应于"srcId"
	@FieldRules(xmlName = "srcId", display = false, type = "String", node = false, editable = false, textNode = false)
	private String				srcId;
	// 此属性对应于"periodDuration"
	@FieldRules(xmlName = "periodDuration", display = false, type = "Integer", node = false, editable = false, textNode = false)
	private Integer				periodDuration;
	// 此属性对应于"amendValue"
	@FieldRules(xmlName = "amendValue", display = false, type = "String", node = false, editable = false, textNode = false)
	private String				amendValue;
	// 此属性对应于"id"
	@FieldRules(xmlName = "id", display = false, type = "String", node = false, editable = false, textNode = false)
	private String				id;
	// 此属性对应于"modelType"
	@FieldRules(xmlName = "modelType", display = false, type = "String", node = false, editable = false, textNode = false)
	private String				modelType;
	// 此属性对应于"sendDuration"
	@FieldRules(xmlName = "sendDuration", display = false, type = "Integer", node = false, editable = false, textNode = false)
	private Integer				sendDuration;
	// 此属性对应于"desId"
	@FieldRules(xmlName = "desId", display = false, type = "String", node = false, editable = false, textNode = false)
	private String				desId;
	// 此属性对应于"name"
	@FieldRules(xmlName = "name", display = false, type = "String", node = false, editable = false, textNode = false)
	private String				name;
	// 此属性对应于"background"
	@FieldRules(xmlName = "background", display = false, type = "Boolean", node = false, editable = false, textNode = false)
	private Boolean				background			= Boolean.valueOf(false);
	// 此属性对应于"topicId"
	@FieldRules(xmlName = "topicId", display = false, type = "String", node = false, editable = false, textNode = false)
	private String				topicId;
	// 此属性对应于"uuid"
	@FieldRules(xmlName = "uuid", display = false, type = "String", node = false, editable = false, textNode = false)
	private String				uuid;

	public Integer getPeriodCount()
	{
		return this.periodCount;
	}

	public void setPeriodCount(Integer periodCount)
	{
		this.periodCount = periodCount;
	}

	public Boolean getParallel()
	{
		return this.parallel;
	}

	public void setParallel(Boolean parallel)
	{
		this.parallel = parallel;
	}

	public String getDirection()
	{
		return this.direction;
	}

	public void setDirection(String direction)
	{
		this.direction = direction;
	}

	public Integer getWidth()
	{
		return this.width;
	}

	public void setWidth(Integer width)
	{
		this.width = width;
	}

	public String getSrcId()
	{
		return this.srcId;
	}

	public void setSrcId(String srcId)
	{
		this.srcId = srcId;
	}

	public Integer getPeriodDuration()
	{
		return this.periodDuration;
	}

	public void setPeriodDuration(Integer periodDuration)
	{
		this.periodDuration = periodDuration;
	}

	public String getAmendValue()
	{
		return this.amendValue;
	}

	public void setAmendValue(String amendValue)
	{
		this.amendValue = amendValue;
	}

	public String getId()
	{
		return this.id;
	}

	public void setId(String id)
	{
		this.id = id;
	}

	public String getModelType()
	{
		return this.modelType;
	}

	public void setModelType(String modelType)
	{
		this.modelType = modelType;
	}

	public Integer getSendDuration()
	{
		return this.sendDuration;
	}

	public void setSendDuration(Integer sendDuration)
	{
		this.sendDuration = sendDuration;
	}

	public String getDesId()
	{
		return this.desId;
	}

	public void setDesId(String desId)
	{
		this.desId = desId;
	}

	public String getName()
	{
		return this.name;
	}

	public void setName(String name)
	{
		this.name = name;
	}

	public Boolean getBackground()
	{
		return this.background;
	}

	public void setBackground(Boolean background)
	{
		this.background = background;
	}

	public String getTopicId()
	{
		return this.topicId;
	}

	public void setTopicId(String topicId)
	{
		this.topicId = topicId;
	}

	public String getUuid()
	{
		return this.uuid;
	}

	public void setUuid(String uuid)
	{
		this.uuid = uuid;
	}

	/**
	 * 判断该消息是否为周期消息，通过子节点判断（如果不是消息节点该方法；则返回false）
	 * 
	 * @return </br> <b>作者</b> 杜一森 </br> <b>日期</b> 2012-01-02
	 */
	public boolean isPeriodMessage()
	{
		for (Entity en : this.getChildren())
		{
			if (en instanceof Period)
			{
				return true;
			}
		}
		return false;
	}

	/**
	 * 判断该消息是否为背景消息，通过子节点判断（如果不是消息节点该方法；则返回false）
	 * 
	 * @return </br> <b>作者</b> 杜一森 </br> <b>日期</b> 2012-01-02
	 */
	public boolean isBackground()
	{

		return this.background;

	}

	/**
	 * 判断该消息是否为并行消息（如果不是消息节点该方法；则返回false）
	 * 
	 * @return </br> <b>作者</b> 杜一森 </br> <b>日期</b> 2012-01-02
	 */
	public boolean isParallel()
	{

		return this.getParallel();
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#equals(java.lang.Object) <br/> <b>作者</b> 孙大巍 </br>
	 * <b>日期</b> 2012-2-6
	 */
	@Override
	public boolean equals(Object obj)
	{
		if (obj == null)
			return false;
		if (obj == this)
			return true;
		if (obj instanceof Message)
		{
			Message msg = (Message) obj;
			if (msg.uuid.equals(this.uuid))
			{
				if (this.getChildren().equals(msg.getChildren()))
				{
					return true;
				}
			}
		}
		return false;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#clone() <br/> <b>作者</b> 孙大巍 </br> <b>日期</b>
	 * 2012-1-10
	 */
	@Override
	public Object clone() throws CloneNotSupportedException
	{
		Message cloned = (Message) super.clone();
		cloned.setChildren(new ArrayList<Entity>());
		List<Entity> children = this.getChildren();
		List<Entity> clonedChildren = new ArrayList<Entity>(children.size());
		if (this.isPeriodMessage())
		{
			for (Entity child : children)
			{
				Period period = (Period) child;
				Period clonedPeriod = (Period) period.clone();
				clonedPeriod.setXmlName(period.getXmlName());
				clonedPeriod.setXpath(period.getXpath());
				clonedChildren.add(clonedPeriod);
			}

		} else
		{
			for (Entity child : children)
			{
				Field field = (Field) child;
				Field clonedChild = (Field) field.clone();
				clonedChild.setXmlName(field.getXmlName());
				clonedChild.setXpath(field.getXpath());
				clonedChildren.add(clonedChild);
			}

		}
		for (Entity child : clonedChildren)
		{
			child.setParent(cloned);
		}
		// 生成新的UUID，避免重复
		cloned.setUuid(UUID.randomUUID().toString());

		return cloned;
	}

	/**
	 * 返回该消息的描述信息
	 * 
	 * @return </br> <b>Author</b> ZHANG Yi </br> <b>Date</b> 2012-5-23
	 */
	public String getDesc()
	{
		return this.toString().replace("<", "&lt;").replace(">", "&gt;");
	}

}